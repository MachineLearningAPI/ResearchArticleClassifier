Using the Synergies Between the Object-Oriented Paradigm and Mathematics in Joint
Mathematics/Computer Science Programs

Marc Conrad
University of Luton Park Square
Luton LU1 3JU, United Kingdom
marc.conrad@luton.ac.uk

Tim French
University of Luton Park Square
Luton LU1 3JU, United Kingdom
tim.french@luton.ac.uk

ABSTRACT
Whilst the object oriented paradigm and its instantiation within programming languages such as Java has become a ubiquitous part of both the commercial and educational landscapes, its usage as a visualisation technique within Mathematics undergraduate programmes of study has not been widely recognised. By regarding the object oriented paradigm as a medium for conceptual exploration (rather than merely as a tool) the aim is to show how the close conceptual links between object orientation and certain mathematical structures such as rings and groups can be more fully realised, using the ready-made Java package com.perisic.ring [2]. The package provides classes for abstract rings and can in addition be used as a reference model for other mathematical objects such as groups or vector spaces [3].
The intention behind the approach offered here is to build upon these enabling foundations so as to reveal the fundamental synergies that exist between the various entities that are central to the OO paradigm (such as Abstract Data Types) and abstract mathematical structures (such as Rings and Groups). By inviting students to revisit certain fundamental OO constructs and techniques (such as classes, polymorphism, encapsulation and inheritance) within the context of pure mathematics, students may perhaps gain a deeper insight into mathematical abstractions and related algebraic structures. The idea is to generally reinforce students' learning and to generally enhance their mathematical maturity through a process of "live engagement" with a familiar and indeed ubiquitous OO paradigm.
It is clear that for some authors at least, the use of Java in Mathematics is seen to be purely pragmatic: i.e. merely as a convenient tool used to engineer a graphical user interface or to explore distributed programming tasks [1]. However there has been a heated on-going debate that has sought to identify whether the "correct" use of a computer and other auto-
Copyright is held by the author/owner. ITiCSE'04, June 28­30, 2004, Leeds, United Kingdom. ACM 1-58113-836-9/04/0006.

mated devices such as calculators, genuinely aids students' learning and analytical abilities, or whether such usage may actually be detrimental to the development of mathematical maturity [4]. We prefer to believe that Java may have a deeper role to play. However, rather than directly seeking to contribute to this pedagogic debate between "reformers" and "traditionalists" our aim here is to show how (conceptually) the two discipline areas are mutually synergistic. In particular we show how gaining a deeper insight into, and understanding of, object oriented techniques can in fact provide an ideal pedagogic opportunity for our undergraduate target audience to better visualise, hence understand, certain abstract mathematical concepts and entities.
Categories and Subject Descriptors
K.3 [Computer and Information Science Education]: Miscellaneous; G.4 [Mathematical Software]: Documentation; D.2.2 [Software Engineering]: Design Tools and Techniques--Object-oriented design methods
General Terms
Algorithms, Design, Experimentation, Languages.
Keywords
Object Oriented Programming, Mathematics, Computer Algebra, Education
REFERENCES
[1] L. Bernardin, B. Char, E. Kaltofen, 1999. Symbolic Computation in Java: an Appraisement, Proceedings of ISSAC'99, ACM Press.
[2] Marc Conrad. com.perisic.ring ­ A Java package for multivariate polynomials, http://ring.perisic.com.
[3] M. Conrad, T. French, 2004. Exploring the synergies between the Object-Oriented paradigm and Mathematics: a Java led approach, Int. J. Math. Educ. Sci. Tehcnol, to appear.
[4] Leinbach, D. C. Pountney, T. Etchells, 2000. Appropriate use of a CAS in the teaching and learning of mathematics, Int. J. Math. Educ. Sci. Tehcnol., 33, 1-14.

254

