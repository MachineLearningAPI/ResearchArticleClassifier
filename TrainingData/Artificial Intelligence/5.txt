International Journal of Hybrid Information Technology
Vol.8, No.1 (2015), pp.51-72
http://dx.doi.org/10.14257/ijhit.2015.8.1.05

Design Robust Artificial Intelligence Model-base Variable
Structure Controller with Application to Dynamic Uncertainties
OCTAM VI Continuum Robot
Omid Mahmoudi, Farzin Piltan, Omid Reza Sadrnia, Mahdi Jafari and Mehdi
Eram
Intelligent System and Robotic Lab, Iranian Institute of Advance Science and
Technology (IRAN SSP), Shiraz/Iran
piltan_f@iranssp.com, WWW.IRANSSP.COM/english
Abstract
Design a robust artificial intelligent nonlinear controller for second order nonlinear
uncertain dynamical systems is one of the most important challenging works. This paper
focuses on the design of a robust chattering free mathematical model-base artificial
intelligence (fuzzy inference system) variable structure controller (MFVSC) for highly
nonlinear dynamic continuum robot manipulator, in presence of uncertainties. In order to
provide high performance nonlinear methodology, variable structure controller is
selected. Pure variable structure controller can be used to control of partly known
nonlinear dynamic parameters of continuum robot manipulator.
In order to
reduce/eliminate the chattering, this research is used the artificial intelligence (fuzzy
logic) theory. The results demonstrate that the model base fuzzy variable structure
controller with switching function is a model-based controllers which works well in
certain and partly uncertain system. Lyapunov stability is proved in mathematical modelbased fuzzy variable structure controller with switching (sign) function. This controller
has acceptable performance in presence of uncertainty (e.g., overshoot=1%, rise
time=0.9 second, steady state error = 1.6e-8 and RMS error=4.8e-8).
Keywords: Variable structure control, fuzzy logic methodology, robust controller,
hyper-redundant, continuum robot manipulator

1. Introduction
Continuum robots represent a class of robots that have a biologically inspired form
characterized by flexible backbones and high degrees-of-freedom structures [1]. The idea
of creating “trunk and tentacle” robots, (in recent years termed continuum robots [1]), is
not new [2]. Inspired by the bodies of animals such as snakes [3], the arms of octopi [4],
and the trunks of elephants [5-6], researchers have been building prototypes for many
years. A key motivation in this research has been to reproduce in robots some of the
special qualities of the biological counterparts. This includes the ability to “slither” into
tight and congested spaces, and (of particular interest in this work) the ability to grasp and
manipulate a wide range of objects, via the use of “whole arm manipulation” i.e.
wrapping their bodies around objects, conforming to their shape profiles. Hence, these
robots have potential applications in whole arm grasping and manipulation in unstructured
environments such as rescue operations. Theoretically, the compliant nature of a
continuum robot provides infinite degrees of freedom to these devices. However, there is
a limitation set by the practical inability to incorporate infinite actuators in the device.
Most of these robots are consequently underactuated (in terms of numbers of independent
actuators) with respect to their anticipated tasks. In other words they must achieve a wide
range of configurations with relatively few control inputs. This is partly due to the desire
to keep the body structures (which, unlike in conventional rigid-link manipulators or

ISSN: 1738-9968 IJHIT
Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

fingers, are required to directly contact the environment) “clean and soft”, but also to
exploit the extra control authority available due to the continuum contact conditions with
a minimum number of actuators. For example, the Octarm VI continuum manipulator,
discussed frequently in this paper, has nine independent actuated degrees-of-freedom with
only three sections. Continuum manipulators differ fundamentally from rigid-link and
hyper-redundant robots by having an unconventional structure that lacks links and joints.
Hence, standard techniques like the Denavit-Hartenberg (D-H) algorithm cannot be
directly applied for developing continuum arm kinematics. Moreover, the design of each
continuum arm varies with respect to the flexible backbone present in the system, the
positioning, type and number of actuators. The constraints imposed by these factors make
the set of reachable configurations and nature of movements unique to every continuum
robot. This makes it difficult to formulate generalized kinematic or dynamic models for
continuum robot hardware. Chirikjian and Burdick were the first to introduce a method
for modeling the kinematics of a continuum structure by representing the curve-shaping
function using modal functions [6]. Mochiyama used the Serret- Frenet formulae to
develop kinematics of hyper-degrees of freedom continuum manipulators [5]. For details
on the previously developed and more manipulator-specific kinematics of the
Rice/Clemson “Elephant trunk” manipulator, see [1-2, 5]. For the Air Octor and Octarm
continuum robots, more general forward and inverse kinematics have been developed by
incorporating the transformations of each section of the manipulator (using D-H
parameters of an equivalent virtual rigid link robot) and expressing those in terms of the
continuum manipulator section parameters [4]. The net result of the work in [6, 3-5] is the
establishment of a general set of kinematic algorithms for continuum robots. Thus, the
kinematics (i.e. geometry based modeling) of a quite general set of prototypes of
continuum manipulators has been developed and basic control strategies now exist based
on these. The development of analytical models to analyze continuum arm dynamics (i.e.
physics based models involving forces in addition to geometry) is an active, ongoing
research topic in this field. From a practical perspective, the modeling approaches
currently available in the literature prove to be very complicated and a dynamic model
which could be conveniently implemented in an actual device’s real-time controller has
not been developed yet. The absence of a computationally tractable dynamic model for
these robots also prevents the study of interaction of external forces and the impact of
collisions on these continuum structures. This impedes the study and ultimate usage of
continuum robots in various practical applications like grasping and manipulation, where
impulsive dynamics [1, 4] are important factors. Although continuum robotics is an
interesting subclass of robotics with promising applications for the future, from the
current state of the literature, this field is still in its stages of inception.
A controller is a device which can sense information from linear or nonlinear system
(e.g., continuum robot) to improve the systems performance [7-15]. The main targets in
designing control systems are stability, good disturbance rejection, and small tracking
error[15]. Variable structure controller is an influential nonlinear controller to certain and
uncertain systems which it is based on system’s dynamic model 14]. Variable structure
controller is a powerful nonlinear robust controller under condition of partly uncertain
dynamic parameters of system [7]. This controller is used to control of highly nonlinear
systems especially for continuum robot. Chattering phenomenon and nonlinear equivalent
dynamic formulation in uncertain dynamic parameter are two main drawbacks in pure
variable structure controller [14-15]. The chattering phenomenon problem in pure variable
structure controller is reduced by artificial intelligence in this research.
In recent years, artificial intelligence theory has been used in variable structure control
systems. Neural network, fuzzy logic and neuro-fuzzy are synergically combined with
nonlinear classical controller and used in nonlinear, time variant and uncertain plant (e.g.,
robot manipulator). Fuzzy logic controller (FLC) is one of the most important
applications of fuzzy logic theory. This controller can be used to control nonlinear,

52

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

uncertain, and noisy systems. This method is free of some model techniques as in modelbased controllers. As mentioned that fuzzy logic application is not only limited to the
modelling of nonlinear systems [10] but also this method can help engineers to design a
model-free controller. Control robot arm manipulators using model-based controllers are
based on manipulator dynamic model. These controllers often have many problems for
modelling. Conventional controllers require accurate information of dynamic model of
robot manipulator, but most of time these models are MIMO, nonlinear and partly
uncertain therefore calculate accurate dynamic model is complicated [11]. The main
reasons to use fuzzy logic methodology are able to give approximate recommended
solution for uncertain and also certain complicated systems to easy understanding and
flexible. Fuzzy logic provides a method to design a model-free controller for nonlinear
plant with a set of IF-THEN rules [12].
The main goal of this research is to use a robust model base fuzzy VSC to control of
Octarm VI continuum manipulator. The research concentrated on the high performance
control. An additional goal was to design a nonlinear stable and robust fuzzy based
methodology that would control the uncertain manipulator and provide functionality to an
Octarm VI. To control the continuum robotic system a model base fuzzy VSC control was
created.
This paper is organized as follows; Section 2, is served as an introduction to the
variable structure controller formulation algorithm and its application to control of
continuum robot, dynamic of continuum robot and proof of stability. Part 3, introduces
and describes the methodology (gradient descent optimal variable structure controller)
algorithm. Section 4 presents the simulation results and discussion of this algorithm
applied to a continuum robot and the final section is describing the conclusion.

2. Theory
A. Dynamic Formulation of Continuum Robot
The Continuum section analytical model developed here consists of three modules
stacked together in series. In general, the model will be a more precise replication of the
behavior of a continuum arm with a greater of modules included in series. However, we
will show that three modules effectively represent the dynamic behavior of the hardware,
so more complex models are not motivated. Thus, the constant curvature bend exhibited
by the section is incorporated inherently within the model. The mass of the arm is
modeled as being concentrated at three points whose co-ordinates referenced with respect
to (see Figure 1);

Copyright ⓒ 2015 SERSC

53

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Figure 1. Assumed Structure for Analytical Model of a Section of a
Continuum Arm
Where;
𝑙 - Length of the rigid rod connecting the two struts, constant throughout the structure,
𝑘1,𝑖 , 𝑖 = 1,2,3 - Spring constant of actuator 1 at module 𝑖,
𝑘2,𝑖 , 𝑖 = 1,2,3 - Spring constant of actuator 2 at module 𝑖,
𝐶1,𝑖 , 𝑖 = 1,2,3 - Damping coefficient of actuator 1 at module 𝑖,
𝐶2,𝑖 , 𝑖 = 1,2,3 - Damping coefficient of actuator 2 at module 𝑖,
𝑚𝑖 , 𝑖 = 1,2,3 - Mass in each module,
𝐼𝑖 , 𝑖 = 1,2,3 - Moment of inertia of the rigid rod in each module.
A global inertial frame (N) located at the base of the arm are given below
𝑵
𝒎𝟏𝑷

̂𝟑
= 𝑺𝟏 . 𝒏

(1)

𝑵
𝒎𝟐𝑷

̂𝟏 + (𝑺𝟏 + 𝑺𝟐 𝐜𝐨𝐬 𝜽𝟏 ). 𝒏
̂𝟑
= 𝑺𝟐 . 𝒔𝒊𝒏𝜽𝟏 𝒏

(2)

𝑵
𝒎𝟑𝑷

̂𝟏 + (𝑺𝟏 + 𝑺𝟐 𝐜𝐨𝐬 𝜽𝟏 + 𝑺𝟑 . 𝐜𝐨𝐬( 𝜽𝟏 +
= (𝑺𝟐 . 𝒔𝒊𝒏𝜽𝟏 + 𝑺𝟑 . 𝐬𝐢𝐧( 𝜽𝟏 + 𝜽𝟐 )) 𝒏
̂𝟑
𝜽𝟐 ))). 𝒏

(3)

The position vector of each mass is initially defined in a frame local to the module in
which it is present. These local frames are located at the base of each module and oriented
along the direction of variation of coordinate ‘𝑠’ of that module. The positioning of each
of these masses is at the centre of mass of the rigid rods connecting the two actuators.
Differentiating the position vectors we obtain the linear velocities of the masses. The
kinetic energy (T) of the system comprises the sum of linear kinetic energy terms
(constructed using the above velocities) and rotational kinetic energy terms due to rotation
of the rigid rod connecting the two actuators, and is given below as

54

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

𝟐
𝑻 = (𝟎. 𝟓)𝒎𝟏 𝒔̇ 𝟏 𝟐 + (𝟎. 𝟓)𝒎𝟐 ((𝒔̇ 𝟐 𝒔𝒊𝒏𝜽𝟏 + 𝒔𝟐 𝒄𝒐𝒔𝜽𝟏 𝜽̇𝟏 ) + (𝒔̇ 𝟏 + 𝒔̇ 𝟐 𝒄𝒐𝒔𝜽𝟏 −

(4)

𝟐

𝒔𝟐 𝒔𝒊𝒏𝜽𝟏 𝜽̇𝟏 ) ) + (𝟎. 𝟓)𝒎𝟑 ((𝒔̇ 𝟐 𝒔𝒊𝒏𝜽𝟏 + 𝒔𝟐 𝒄𝒐𝒔𝜽𝟏 𝜽̇𝟏 + 𝒔̇ 𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 ) +
𝟐
𝒔𝟑 𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )𝜽̇𝟏 + 𝒔𝟑 𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )𝜽̇𝟐 ) + (𝒔̇ 𝟏 + 𝒔̇ 𝟐 𝒄𝒐𝒔𝜽𝟏 − 𝒔𝟐 𝒔𝒊𝒏𝜽𝟏 𝜽̇𝟏 +
𝟐

𝟐

𝒔̇ 𝟑 𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 ) − 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )𝜽̇𝟏 − 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )𝜽̇𝟐 ) ) + (𝟎. 𝟓)𝑰𝟏 𝜽̇𝟏 +
𝟐
𝟐
𝟐
𝟐
𝟐
(𝟎. 𝟓)𝑰𝟐 (𝜽̇𝟏 + 𝜽̇𝟐 ) + (𝟎. 𝟓)𝑰𝟑 (𝜽̇𝟏 + 𝜽̇𝟐 + 𝜽̇𝟑 ).

The potential energy (P) of the system comprises the sum of the gravitational potential
energy and the spring potential energy. A small angle assumption is made throughout the
derivation. This allows us to directly express the displacement of springs and the
velocities associated with dampers in terms of system generalized coordinates.
𝑷 = −𝒎𝟏 𝒈𝒔𝟏 − 𝒎𝟐 𝒈(𝒔𝟏 + 𝒔𝟐 𝒄𝒐𝒔𝜽𝟏 ) − 𝒎𝟑 𝒈(𝒔𝟏 + 𝒔𝟐 𝒄𝒐𝒔𝜽𝟏 + 𝒔𝟑 𝒄𝒐𝒔(𝜽𝟏 +
𝜽𝟏 )) + (𝟎. 𝟓)𝒌𝟏𝟏 (𝒔𝟏 + (𝟏/𝟐)𝜽𝟏 − 𝒔𝟎𝟏 )𝟐 + (𝟎. 𝟓)𝒌𝟐𝟏 (𝒔𝟏 + (𝟏⁄𝟐)𝜽𝟏 − 𝒔𝟎𝟏 )𝟐 +
(𝟎. 𝟓)𝒌𝟏𝟐 (𝒔𝟐 + (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 )𝟐 + (𝟎. 𝟓)𝒌𝟐𝟐 (𝒔𝟐 + (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 )𝟐 +
(𝟎. 𝟓)𝒌𝟏𝟑 (𝒔𝟑 + (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 )𝟐 + (𝟎. 𝟓)𝒌𝟐𝟑 (𝒔𝟑 + (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 )𝟐

(5)

where,𝑆01 , 𝑆02 , 𝑆03 are the initial values of𝑆1 , 𝑆2 , 𝑆3 respectively.
Due to viscous damping in the system, Rayliegh’s dissipation function [6] is used to
give damping energy
𝟐
𝟐
𝑫 = (𝟎. 𝟓)𝒄𝟏𝟏 (𝒔̇ 𝟏 + (𝟏/𝟐)𝜽̇𝟏 ) + (𝟎. 𝟓)𝒄𝟐𝟏 (𝒔̇ 𝟏 + (𝟏/𝟐)𝜽̇𝟏 ) + (𝟎. 𝟓)𝒄𝟏𝟐 (𝒔̇ 𝟐 +
𝟐
𝟐
𝟐
(𝟏/𝟐)𝜽̇𝟐 ) + (𝟎. 𝟓)𝒄𝟐𝟐 (𝒔̇ 𝟐 + (𝟏/𝟐)𝜽̇𝟐 ) + (𝟎. 𝟓)𝒄𝟏𝟑 (𝒔̇ 𝟑 + (𝟏/𝟐)𝜽̇𝟑 ) +

(6)

𝟐

(𝟎. 𝟓)𝒄𝟐𝟑 (𝒔̇ 𝟑 + (𝟏/𝟐)𝜽̇𝟑 ) .
The generalized forces in the system corresponding to the generalized co-ordinates are
expressed as appropriately weighted combinations of the input forces.
𝑸𝒔𝟏 = 𝑭𝟏𝟏 + 𝑭𝟐𝟏 + (𝑭𝟏𝟐 + 𝑭𝟐𝟐 )𝒄𝒐𝒔𝜽𝟏 + (𝑭𝟏𝟑 + 𝑭𝟐𝟑 )𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )

(7)

𝑸𝒔𝟐 = 𝑭𝟏𝟐 + 𝑭𝟐𝟐 + (𝑭𝟏𝟑 + 𝑭𝟐𝟑 )𝒄𝒐𝒔(𝜽𝟐 )

(8)

𝑸𝒔𝟑 = 𝑭𝟏𝟑 + 𝑭𝟐𝟑

(9)

𝑸𝜽𝟏 = (𝟏⁄𝟐)(𝑭𝟏𝟏 − 𝑭𝟐𝟏 ) + (𝟏⁄𝟐)(𝑭𝟏𝟐 − 𝑭𝟐𝟐 ) + (𝟏⁄𝟐)(𝑭𝟏𝟑 − 𝑭𝟐𝟑 ) +
𝒔𝟐 𝒔𝒊𝒏𝜽𝟐 (𝑭𝟏𝟑 + 𝑭𝟐𝟑 )

(10)

𝑸𝜽𝟏 = (𝟏⁄𝟐)(𝑭𝟏𝟐 − 𝑭𝟐𝟐 ) + (𝟏⁄𝟐)(𝑭𝟏𝟑 − 𝑭𝟐𝟑 )

(11)

𝑸𝜽𝟏 = (𝟏⁄𝟐)(𝑭𝟏𝟑 − 𝑭𝟐𝟑 )

(12)

It can be evinced from the force expressions that the total input forces acting on each
module can be resolved into an additive component along the direction of extension and a

Copyright ⓒ 2015 SERSC

55

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

subtractive component that results in a torque. For the first module, there is an additional
torque produced by forces in the third module.
The model resulting from the application of Lagrange’s equations of motion obtained
for this system can be represented in the form
(13)

𝑭𝒄𝒐𝒆𝒇𝒇 𝝉 = 𝑫 (𝒒) 𝒒̈ + 𝑪 (𝒒) 𝒒̇ + 𝑮 (𝒒)

where 𝜏 is a vector of input forces and q is a vector of generalized co-ordinates. The force
coefficient matrix 𝐹𝑐𝑜𝑒𝑓𝑓 transforms the input forces to the generalized forces and torques
in the system. The inertia matrix, 𝐷 is composed of four block matrices. The block
matrices that correspond to pure linear accelerations and pure angular accelerations in the
system (on the top left and on the bottom right) are symmetric. The matrix 𝐶 contains
coefficients of the first order derivatives of the generalized co-ordinates. Since the system
is nonlinear, many elements of 𝐶 contain first order derivatives of the generalized coordinates. The remaining terms in the dynamic equations resulting from gravitational
potential energies and spring energies are collected in the matrix 𝐺 . The coefficient
matrices of the dynamic equations are given below,
𝑭𝒄𝒐𝒆𝒇𝒇 =
𝟏
𝟎
𝟎
𝟏⁄𝟐
𝟎
[ 𝟎

𝟏
𝟎
𝟎
−𝟏⁄𝟐
𝟎
𝟎

𝒄𝒐𝒔(𝜽𝟏 )
𝟏
𝟎
𝟏 ⁄𝟐
𝟏 ⁄𝟐
𝟎

𝒄𝒐𝒔(𝜽𝟏 )
𝟏
𝟎
−𝟏⁄𝟐
−𝟏⁄𝟐
𝟎

𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )
𝒄𝒐𝒔(𝜽𝟐 )
𝟏
𝟏⁄𝟐 + 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟐 )
𝟏 ⁄𝟐
𝟏 ⁄𝟐

(14)

𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )
𝒄𝒐𝒔(𝜽𝟐 )
𝟏
−𝟏⁄𝟐 + 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟐 )
−𝟏⁄𝟐
]
−𝟏⁄𝟐

(15)

𝑫 (𝒒) =
−𝒎𝟐 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟏 )
−𝒎𝟑 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟏 )
−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )
−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )

𝒎𝟏 + 𝒎𝟐
+𝒎𝟑

𝒎𝟐 𝒄𝒐𝒔(𝜽𝟏 )
+𝒎𝟑 𝒄𝒐𝒔(𝜽𝟏 )

𝒎𝟑 𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )

𝒎𝟐 𝒄𝒐𝒔(𝜽𝟏 )
+𝒎𝟑 𝒄𝒐𝒔(𝜽𝟏 )

𝒎𝟐 + 𝒎𝟑

𝒎𝟑 𝒄𝒐𝒔(𝜽𝟐 )

−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟐 )

−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟐 )

𝟎

𝒎𝟑 𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )

𝒎𝟑 𝒄𝒐𝒔(𝜽𝟐 )

𝒎𝟑

𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟐 )

𝟎

𝟎

−𝒎𝟐 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟏 )
−𝒎𝟑 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟏 )
−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟐 )
−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )

𝒎𝟑 𝒔𝟐 𝒔𝒊𝒏(𝜽𝟐 )

𝒎𝟐 𝒔𝟐𝟐 + 𝑰𝟏 + 𝑰𝟐
+𝑰𝟑 + 𝒎𝟑 𝒔𝟐𝟐 + 𝒎𝟑 𝒔𝟐𝟑
+𝟐𝒎𝟑 𝒔𝟑 𝒄𝒐𝒔(𝜽𝟐 )𝒔𝟐

𝑰𝟐 + 𝒎𝟑 𝒔𝟐𝟑 + 𝑰𝟑
+𝒎𝟑 𝒔𝟑 𝒄𝒐𝒔(𝜽𝟐 )𝒔𝟐

𝑰𝟑

−𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 ) −𝒎𝟑 𝒔𝟑 𝒔𝒊𝒏(𝜽𝟐 )

𝟎

𝑰𝟐 + 𝒎𝟑 𝒔𝟐𝟑 + 𝑰𝟑
+𝒎𝟑 𝒔𝟑 𝒄𝒐𝒔(𝜽𝟐 )𝒔𝟐 𝑰

𝑰𝟐 + 𝒎𝟑 𝒔𝟐𝟑 + 𝑰𝟑

𝑰𝟑

𝟎

𝑰𝟑

𝑰𝟑

𝑰𝟑 ]

[

𝟎

56

𝟎

𝟎

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

(16)

𝑪 (𝒒) =
−𝟐𝒎𝟐𝒔𝒊𝒏(𝜽𝟏 )𝜽̇𝟏
−𝟐𝒎𝟑𝒔𝒊𝒏(𝜽𝟏 )𝜽̇𝟏

−𝒎𝟐 𝒔𝟐
𝒄𝒐𝒔(𝜽𝟏 )(𝜽̇𝟏 )
+(𝟏⁄𝟐)(𝒄𝟏𝟏 + 𝒄𝟐𝟏 )
−𝟐𝒎𝟑 𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )
−𝒎𝟑 𝒔𝟐
−𝒎𝟑 𝒔𝟑𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 )
(𝜽̇𝟏 + 𝜽̇𝟐 )
𝒄𝒐𝒔(𝜽𝟏 )(𝜽̇𝟏 )
−𝒎𝟑 𝒔𝟑
𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 )(𝜽̇𝟏 )

𝟎

𝟎

𝒄𝟏𝟐 + 𝒄𝟐𝟐

−𝟐𝒎𝟑 𝒔𝒊𝒏(𝜽𝟐)
(𝜽̇𝟏 + 𝜽̇𝟐 )

−𝒎𝟑 𝒔𝟑 (𝜽̇𝟏)
+(𝟏⁄𝟐)
(𝒄𝟏𝟐 + 𝒄𝟐𝟐 )
−𝒎𝟑 𝒔𝟐 (𝜽̇𝟏)
−𝒎𝟑 𝒔𝟑
𝒄𝒐𝒔(𝜽𝟐 )(𝜽̇𝟏 )

−𝟐𝒎𝟑𝒔𝟑
𝒄𝒐𝒔(𝜽𝟐)(𝜽̇𝟏 )
−𝒎𝟑 𝒔𝟑
𝒄𝒐𝒔(𝜽𝟐)(𝜽̇𝟐 )

𝟎

𝟎

𝟐𝒎𝟑 𝒔𝒊𝒏(𝜽𝟐)(𝜽̇𝟏 )

𝒄𝟏𝟑 + 𝒄𝟐𝟑

−𝒎𝟑 𝒔𝟑 𝒔𝟐
𝒄𝒐𝒔(𝜽𝟐 )(𝜽̇𝟏 )
−𝒎𝟑 𝒔𝟑 (𝜽̇𝟏)

−𝟐𝒎𝟑 𝒔𝟑 (𝜽̇𝟏)
−𝒎𝟑 𝒔𝟑(𝜽̇𝟐 )

(𝟏⁄𝟐)
(𝒄𝟏𝟑 + 𝒄𝟐𝟑 )

𝟐𝒎𝟑 𝒔𝟑𝒄𝒐𝒔(𝜽𝟐 )(𝜽̇𝟏)
−𝟐𝒎𝟑 𝒔𝟐(𝜽̇𝟏 )

𝟐𝒎𝟑 𝒔𝟑 𝒔𝟐
𝒔𝒊𝒏(𝜽𝟐 )(𝜽̇𝟐 )
+(𝟏𝟐⁄𝟒)
(𝒄𝟏𝟏 + 𝒄𝟐𝟏 )

𝒎𝟑 𝒔𝟑 𝒔𝟐
𝒔𝒊𝒏(𝜽𝟐)(𝜽̇𝟐 )

𝟎

+𝟐𝒎𝟐 𝒔𝟐(𝜽̇𝟏 )

𝟐𝒎𝟑 𝒔𝟑 (𝜽𝟏̇ + 𝜽𝟐̇ )
−𝟐𝒎𝟑 𝒔𝟐 𝒄𝒐𝒔(𝜽𝟐 )
(𝜽𝟏̇ + 𝜽𝟐̇ )

𝟎

(𝟏⁄𝟐)(𝒄𝟏𝟐 + 𝒄𝟐𝟐 ) +
𝟐𝒎𝟑 𝒔𝟑𝒄𝒐𝒔(𝜽𝟐 )(𝜽̇𝟏)

𝟐𝒎𝟑 𝒔𝟑
(𝜽𝟏̇ + 𝜽𝟐̇ )

𝒎𝟑 𝒔𝟑𝒔𝟐
𝒔𝒊𝒏(𝜽𝟐 )(𝜽̇𝟏 )

(𝟏𝟐⁄𝟒)
(𝒄𝟏𝟐 + 𝒄𝟐𝟐 )

𝟎

𝟎

𝟎

(𝟏⁄𝟐)(𝒄𝟏𝟑 − 𝒄𝟐𝟑 )

𝟎

𝟎

(𝟏𝟐⁄𝟒)
(𝒄𝟏𝟑 + 𝒄𝟐𝟑 )]

𝒄𝟏𝟏 + 𝒄𝟐𝟏

(𝟏⁄𝟐)
(𝒄𝟏𝟏 + 𝒄𝟐𝟏 )

[

(17)

𝑮 (𝒒) =
−𝒎𝟏 𝒈 − 𝒎𝟐 𝒈 + 𝒌𝟏𝟏 (𝒔𝟏 + (𝟏⁄𝟐)𝜽𝟏 − 𝒔𝟎𝟏 ) + 𝒌𝟐𝟏 (𝒔𝟏 − (𝟏⁄𝟐)𝜽𝟏 − 𝒔𝟎𝟏 ) − 𝒎𝟑 𝒈
−𝒎𝟐 𝒈𝒄𝒐𝒔(𝜽𝟏 ) + 𝒌𝟏𝟐 (𝒔𝟐 + (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 ) + 𝒌𝟐𝟐 (𝒔𝟐 − (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 ) − 𝒎𝟑 𝒈𝒄𝒐𝒔(𝜽𝟏 )
−𝒎𝟑 𝒈𝒄𝒐𝒔(𝜽𝟏 + 𝜽𝟐 ) + 𝒌𝟏𝟑 (𝒔𝟑 + (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 ) + 𝒌𝟐𝟑 (𝒔𝟑 − (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 )
𝒎𝟐 𝒔𝟐 𝒈𝒔𝒊𝒏(𝜽𝟏 ) + 𝒎𝟑 𝒔𝟑 𝒈𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 ) + 𝒎𝟑 𝒔𝟐 𝒈𝒔𝒊𝒏(𝜽𝟏 ) + 𝒌𝟏𝟏 (𝒔𝟏 + (𝟏⁄𝟐)𝜽𝟏 − 𝒔𝟎𝟏 )(𝟏⁄𝟐)
+𝒌𝟐𝟏 (𝒔𝟏 − (𝟏⁄𝟐)𝜽𝟏 − 𝒔𝟎𝟏 )(−𝟏⁄𝟐)
𝒎𝟑 𝒔𝟑 𝒈𝒔𝒊𝒏(𝜽𝟏 + 𝜽𝟐 ) + 𝒌𝟏𝟐 (𝒔𝟐 + (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 )(𝟏⁄𝟐) + 𝒌𝟐𝟐 (𝒔𝟐 − (𝟏⁄𝟐)𝜽𝟐 − 𝒔𝟎𝟐 )(−𝟏⁄𝟐)
[

𝒌𝟏𝟑 (𝒔𝟑 + (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 )(𝟏⁄𝟐) + 𝒌𝟐𝟑 (𝒔𝟑 − (𝟏⁄𝟐)𝜽𝟑 − 𝒔𝟎𝟑 )(−𝟏⁄𝟐)

]

B. Variable structure Controller
Consider a nonlinear single input dynamic system is defined by [6]:
⃗ ) + 𝒃(𝒙
⃗ )𝒖
𝒙(𝒏) = 𝒇(𝒙

(18)

Where u is the vector of control input, 𝒙(𝒏) is the 𝒏𝒕𝒉 derivation of 𝒙 ,
𝒙 = [𝒙, 𝒙̇ , 𝒙̈ , … , 𝒙(𝒏−𝟏) ]𝑻 is the state vector, 𝒇(𝒙) is unknown or uncertainty, and 𝒃(𝒙) is
of known sign function. The main goal to design this controller is train to the desired
state;
𝒙𝒅 = [𝒙𝒅 , 𝒙̇ 𝒅 , 𝒙̈ 𝒅 , … , 𝒙𝒅 (𝒏−𝟏) ]𝑻 , and trucking error vector is defined by [6]:
̃ = 𝒙 − 𝒙𝒅 = [𝒙
̃, … , 𝒙
̃(𝒏−𝟏) ]𝑻
𝒙

(19)

A time-varying sliding surface 𝒔(𝒙, 𝒕) in the state space 𝑹𝒏 is given by [6]:

Copyright ⓒ 2015 SERSC

57

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

𝒅
̃=𝟎
𝒔(𝒙, 𝒕) = ( + 𝝀)𝒏−𝟏 𝒙
𝒅𝒕

(20)

where λ is the positive constant. To further penalize tracking error, integral part can be
used in sliding surface part as follows [6]:
𝒕
𝑑
̃ 𝒅𝒕) = 𝟎
𝒔(𝒙, 𝒕) = ( + 𝝀)𝒏−𝟏 (∫ 𝒙
𝑑𝑡
𝟎

(21)

The main target in this methodology is kept the sliding surface slope 𝒔(𝒙, 𝒕) near to the
zero. Therefore, one of the common strategies is to find input 𝑼 outside of 𝒔(𝒙, 𝒕) [6].
𝟏𝒅 𝟐
𝒔 (𝒙, 𝒕) ≤ −𝜻|𝒔(𝒙, 𝒕)|
𝟐 𝒅𝒕

(22)

where ζ is positive constant.
𝐝

(23)

If S(0)>0→ 𝐝𝐭 𝐒(𝐭) ≤ −𝛇
To eliminate the derivative term, it is used an integral term from t=0 to t=𝒕𝒓𝒆𝒂𝒄𝒉
𝒕=𝒕𝒓𝒆𝒂𝒄𝒉 𝒅
𝑺(𝒕)
𝒅𝒕

∫𝒕=𝟎

𝒕=𝒕

≤ − ∫𝒕=𝟎 𝒓𝒆𝒂𝒄𝒉 𝜼 → 𝑺 (𝒕𝒓𝒆𝒂𝒄𝒉 ) − 𝑺(𝟎) ≤ −𝜻(𝒕𝒓𝒆𝒂𝒄𝒉 − 𝟎)

(24)

Where 𝑡𝑟𝑒𝑎𝑐ℎ is the time that trajectories reach to the sliding surface so, suppose
S(𝑡𝑟𝑒𝑎𝑐ℎ = 0) defined as;
𝟎 − 𝑺(𝟎) ≤ −𝜼(𝒕𝒓𝒆𝒂𝒄𝒉 ) → 𝒕𝒓𝒆𝒂𝒄𝒉 ≤

𝑺(𝟎)
𝜻

(25)

and
𝒊𝒇 𝑺(𝟎) < 0 → 0 − 𝑆(𝟎) ≤ −𝜼(𝒕𝒓𝒆𝒂𝒄𝒉 ) → 𝑺(𝟎) ≤ −𝜻(𝒕𝒓𝒆𝒂𝒄𝒉 ) → 𝒕𝒓𝒆𝒂𝒄𝒉 ≤

|𝑺(𝟎)|

Equation (26) guarantees time to reach the sliding surface is smaller than
the trajectories are outside of 𝑆(𝑡).
𝒊𝒇 𝑺𝒕𝒓𝒆𝒂𝒄𝒉 = 𝑺(𝟎) → 𝒆𝒓𝒓𝒐𝒓(𝒙 − 𝒙𝒅 ) = 𝟎

(26)

𝜼
|𝑺(𝟎)|
𝜻

since

(27)

suppose S is defined as
𝒅

̃ = (𝐱̇ − 𝐱̇ 𝐝 ) + 𝛌(𝐱 − 𝐱𝐝 )
𝒔(𝒙, 𝒕) = (𝒅𝒕 + 𝝀) 𝒙
The derivation of S, namely, 𝑆̇ can be calculated as the following;

(28)

𝑺̇ = (𝐱̈ − 𝐱̈ 𝐝 ) + 𝛌(𝐱̇ − 𝐱̇ 𝐝 )

(29)

suppose the second order system is defined as;
𝒙̈ = 𝒇 + 𝒖 → 𝑺̇ = 𝒇 + 𝑼 − 𝒙̈ 𝒅 + 𝛌(𝐱̇ − 𝐱̇ 𝐝 )

58

(30)

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Where 𝒇 is the dynamic uncertain, and also since 𝑆 = 0 𝑎𝑛𝑑 𝑆̇ = 0, to have the best
̂ is defined as
approximation ,𝑼
̂ = −𝒇̂ + 𝒙̈ 𝒅 − 𝝀(𝐱̇ − 𝐱̇ 𝐝 )
𝑼

(31)

A simple solution to get the sliding condition when the dynamic parameters have
uncertainty is the switching control law [52-53]:
̂ − 𝑲(𝒙
⃗ , 𝒕) ∙ 𝐬𝐠𝐧(𝒔)
𝑼𝒅𝒊𝒔 = 𝑼

(32)

where the switching function 𝐬𝐠𝐧(𝐒) is defined as [1, 6]
𝟏
𝒔𝒈𝒏(𝒔) = { −𝟏
𝟎

𝒔>0
𝒔<0
𝒔=𝟎

(33)

⃗ , 𝒕) is the positive constant. Suppose by (22) the following equation can be
and the 𝑲(𝒙
written as,
𝟏𝒅 𝟐
𝒔 (𝒙, 𝒕) = 𝐒 ̇ ∙ 𝐒 = [𝒇 − 𝒇̂ − 𝑲𝐬𝐠𝐧(𝒔)] ∙ 𝑺 = (𝒇 − 𝒇̂) ∙ 𝑺 − 𝑲|𝑺|
𝟐 𝒅𝒕

(34)

and if the equation (26) instead of (25) the sliding surface can be calculated as
𝒅

𝒕

̃ 𝒅𝒕) = (𝐱̇ − 𝐱̇ 𝐝 ) + 𝟐𝝀(𝐱̇ − 𝐱̇ 𝐝 ) − 𝛌𝟐 (𝐱 − 𝐱𝐝 )
𝒔(𝒙, 𝒕) = ( + 𝝀)𝟐 (∫𝟎 𝒙
𝒅𝒕

(35)

in this method the approximation of 𝑼 is computed as [6]
̂ = −𝒇̂ + 𝒙̈ 𝒅 − 𝟐𝝀(𝐱̇ − 𝐱̇ 𝐝 ) + 𝛌𝟐 (𝐱 − 𝐱𝐝 )
𝑼

(36)

Based on above discussion, the variable structure control law for a multi degrees of
freedom robot manipulator is written as [1, 6]:
𝝉 = 𝝉𝒆𝒒 + 𝝉𝒅𝒊𝒔

(37)

Where, the model-based component 𝝉𝒆𝒒 is the nominal dynamics of systems calculated
as follows [1]:
𝝉𝒆𝒒 = [𝑴−𝟏 (𝑩 + 𝑪 + 𝑮) + 𝑺̇]𝑴

(38)

and 𝝉𝒅𝒊𝒔 is computed as [1];
𝝉𝒅𝒊𝒔 = 𝑲 ∙ 𝐬𝐠𝐧(𝑺)

(39)

By (39) and (38) the variable structure control of robot manipulator is calculated as;
𝝉 = [𝑴−𝟏 (𝑩 + 𝑪 + 𝑮) + 𝑺̇]𝑴 + 𝑲 ∙ 𝐬𝐠𝐧(𝑺)

(40)

The lyapunov formulation can be written as follows,
𝑽=

𝟏 𝑻
𝑺 . 𝑴. 𝑺
𝟐

Copyright ⓒ 2015 SERSC

(41)

59

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

the derivation of 𝑉 can be determined as,
𝟏
𝑽̇ = 𝟐 𝑺𝑻 . 𝑴̇. 𝑺 + 𝑺𝑻 𝑴𝑺̇

(42)

the dynamic equation of robot manipulator can be written based on the sliding surface as
𝑴𝑺̇ = −𝑽𝑺 + 𝑴𝑺̇ + 𝑩 + 𝑪 + 𝑮

(43)

it is assumed that
𝑺𝑻 (𝑴̇ − 𝟐𝑩 + 𝑪 + 𝑮)𝑺 = 𝟎

(44)

by substituting (43) in (44)
𝟏
𝑽̇ = 𝟐 𝑺𝑻 𝑴̇𝑺 − 𝑺𝑻 𝑩 + 𝑪𝑺 + 𝑺𝑻 (𝑴𝑺̇ + 𝑩 + 𝑪𝑺 + 𝑮) = 𝑺𝑻 (𝑴𝑺̇ + 𝑩 + 𝑪𝑺 + 𝑮)

(45)

suppose the control input is written as follows
̂
−𝟏
̇ ̂
̂ = 𝑼𝑵𝒐𝒏𝒍𝒊𝒏𝒆𝒂𝒓
̂
̂
𝑼
+𝑼
𝒅𝒊𝒔 = [𝑴 (𝑩 + 𝑪 + 𝑮) + 𝑺]𝑴 + 𝑲. 𝒔𝒈𝒏(𝑺) + 𝑩 + 𝑪𝑺 + 𝑮

(46)

by replacing the equation (49) in (41)
̂ 𝑺̇ − 𝑩̂
̃ 𝑺̇ +
𝑽̇ = 𝑺𝑻 (𝑴𝑺̇ + 𝑩 + 𝑪 + 𝑮 − 𝑴
+ 𝑪𝑺 + 𝑮 − 𝑲𝒔𝒈𝒏(𝑺) = 𝑺𝑻 (𝑴

(47)

𝑩̃
+ 𝑪𝑺 + 𝑮 − 𝑲𝒔𝒈𝒏(𝑺))
and
̃ 𝑺̇ + 𝑩̃
̃ 𝑺̇| + |𝑩̃
+ 𝑪𝑺 + 𝑮| ≤ |𝑴
+ 𝑪𝑺 + 𝑮|
|𝑴

(48)

the Lemma equation in robot arm system can be written as follows
̃ 𝑺̇| + |𝑩 + 𝑪𝑺 + 𝑮| + 𝜼] , 𝒊 = 𝟏, 𝟐, 𝟑, 𝟒, …
𝑲𝒖 = [|𝑴
𝒊

(49)

and finally;
𝒏

(50)

𝑽̇ ≤ − ∑ 𝜼𝒊 |𝑺𝒊 |
𝒊=𝟏

Figure 2 shows the pure variable structure controller applied to continuum robot.

60

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Figure 2. Variable Structure Controller
C. Fuzzy Logic Methodology
Based on foundation of fuzzy logic methodology; fuzzy logic controller has played
important rule to design nonlinear controller for nonlinear and uncertain systems [13-14].
However the application area for fuzzy control is really wide, the basic form for all
command types of controllers consists of; Input fuzzification (binary-to-fuzzy [B/F]
conversion), Fuzzy rule base (knowledge base), Inference engine and Output
defuzzification (fuzzy-to-binary [F/B] conversion). Figure 3 shows the fuzzy controller
part.

Figure 3. Fuzzy Controller Part
The fuzzy inference engine offers a mechanism for transferring the rule base in fuzzy
set which it is divided into two most important methods, namely, Mamdani method and
Sugeno method. Mamdani method is one of the common fuzzy inference systems and he
designed one of the first fuzzy controllers to control of system engine. Mamdani’s fuzzy
inference system is divided into four major steps: fuzzification, rule evaluation,
aggregation of the rule outputs and defuzzification. Michio Sugeno use a singleton as a
membership function of the rule consequent part. The following definition shows the
Mamdani and Sugeno fuzzy rule base [10]

Copyright ⓒ 2015 SERSC

61

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

𝒊𝒇 𝒙 𝒊𝒔 𝑨 𝒂𝒏𝒅 𝒚 𝒊𝒔 𝑩 𝒕𝒉𝒆𝒏 𝒛 𝒊𝒔 𝑪 ′𝒎𝒂𝒎𝒅𝒂𝒏𝒊′
𝒊𝒇 𝒙 𝒊𝒔 𝑨 𝒂𝒏𝒅 𝒚 𝒊𝒔 𝑩 𝒕𝒉𝒆𝒏 𝒛 𝒊𝒔 𝒇(𝒙, 𝒚)′𝒔𝒖𝒈𝒆𝒏𝒐′

(51)

When 𝑥 and 𝑦 have crisp values fuzzification calculates the membership degrees for
antecedent part. Rule evaluation focuses on fuzzy operation (𝐴𝑁𝐷/𝑂𝑅 ) in the antecedent
of the fuzzy rules. The aggregation is used to calculate the output fuzzy set and several
methodologies can be used in fuzzy logic controller aggregation, namely, Max-Min
aggregation, Sum-Min aggregation, Max-bounded product, Max-drastic product, Maxbounded sum, Max-algebraic sum and Min-max. Defuzzification is the last step in the
fuzzy inference system which it is used to transform fuzzy set to crisp set. Consequently
defuzzification’s input is the aggregate output and the defuzzification’s output is a crisp
number. Centre of gravity method (𝐶𝑂𝐺) and Centre of area method (𝐶𝑂𝐴) are two most
common defuzzification methods.

3. Methodology
Based on (38) in VSC controller, if we have uncertainty in systems or when
nonlinearity term in (38) are unknown, a fuzzy logic can be used to approximate them as
𝑀
𝑙 𝑙

(52)

𝑇

𝑓(𝑥) = ∑ 𝜃 ℰ (𝑥) = 𝜃 ℰ(𝑥)
𝑙=1

Where
𝜃 = (𝜃 1 , … , 𝜃 𝑀 )𝑇 , ℰ(𝑥) = (ℰ 1 (𝑥), … , ℰ 𝑀 (𝑥))𝑇 , 𝑎𝑛𝑑 ℰ 𝑙 (𝑥) =
𝜇 𝑙 (𝑥𝑖 )
𝐴

𝑛
∑𝑀
: ∏𝑛𝑖=1 𝑖
𝜃 1 , … , 𝜃 𝑀 are adjustable parameters in (52).
𝑙=1(∏𝑖=1 𝜇𝐴𝑙𝑖 (𝑥𝑖 )).
𝜇𝐴11 (𝑥1 ), … , 𝜇𝐴𝑚
(𝑥𝑛 ) are given membership functions whose parameters will not change
𝑛
over time.

The second type of fuzzy systems is given by
2

𝑛
𝑙
∑𝑀
𝑙=1 𝜃 [∏𝑖=1 exp (− (

𝑓(𝑥) =

𝑥𝑖 − 𝛼𝑖𝑙
) )]
𝛿𝑖𝑙

(53)

2

𝑛
∑𝑀
𝑙=1 [∏𝑖=1 exp (− (

𝑥𝑖 − 𝛼𝑖𝑙
) )]
𝛿𝑖𝑙

Where 𝜃 𝑙 , 𝛼𝑖𝑙 𝑎𝑛𝑑 𝛿𝑖𝑙 are all adjustable parameters. From the universal approximation
theorem, we know that we can find a fuzzy system to estimate any continuous function.
For the first type of fuzzy systems, we can only adjust 𝜃 𝑙 in (53). We define 𝑓 ^ (𝑥|𝜃) as
the approximator of the real function𝑓(𝑥).
𝑓 ^ (𝑥|𝜃) = 𝜃 𝑇 𝜀(𝑥)

(54)

We define 𝜃 ∗ as the values for the minimum error:
𝜃 ∗ = arg min [sup | 𝑓 ^ (𝑥|𝜃) − 𝑔(𝑥)|]

(55)

𝜃∈𝛺 𝑥∈𝑈

Where 𝛺 is a constraint set for 𝜃. For specific 𝑥 , 𝑠𝑢𝑝𝑥∈𝑈 |𝑓 ^ (𝑥|𝜃 ∗) − 𝑓(𝑥)| is the
minimum approximation error we can get.

62

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

We used the first type of fuzzy systems (52) to estimate the nonlinear system (38) the
fuzzy formulation can be write as below;
𝑓(𝑥|𝜃) = 𝜃 𝑇 𝜀(𝑥)
∑𝑛𝑙=1 𝜃 𝑙 [𝜇𝐴𝑙 (𝑥)]
=
∑𝑛𝑙=1[𝜇𝐴𝑙 (𝑥)]

(56)

Where 𝜃 1 , … , 𝜃 𝑛 are adjusted by an adaptation law. The adaptation law is designed to
minimize the parameter errors of 𝜃 − 𝜃 ∗. The SISO fuzzy system is define as
𝑓(𝑥) = ⊖𝑇 𝜀(𝑥)

(57)

Where

𝜃11 , 𝜃12 , … , 𝜃1𝑀
1 2
𝑀
⊖𝑇 = (𝜃1 , … , 𝜃𝑚 )𝑇 = 𝜃2 , 𝜃2 , … , 𝜃2
⋮
1
2
𝑀
, 𝜃𝑚
, … , 𝜃𝑚
[𝜃𝑚
]

(58)

𝑛
𝜀(𝑥) = (𝜀 1 (𝑥), … , 𝜀 𝑀 (𝑥))𝑇 , 𝜀 1 (𝑥) = ∏𝑛𝑖=1 𝜇𝐴𝑙 (𝑥𝑖 )/ ∑𝑀
𝑙=1(∏𝑖=1 𝜇𝐴𝑙 (𝑥𝑖 )) , and 𝜇𝐴𝑙 (𝑥𝑖 )
𝑖

𝑖

𝑖

is defined in (56). To reduce the number of fuzzy rules, we divide the fuzzy system in to
three parts:
𝑇

𝐹1 (𝑞, 𝑞̇ ) = ⊖1 𝜀 (𝑞, 𝑞̇ )

(59)

𝑇

𝑇

1
= [𝜃11 𝜀 (𝑞, 𝑞̇ ) , … , 𝜃𝑚
𝜀 (𝑞, 𝑞̇ ) ]

𝑇

𝑇

𝐹 2 (𝑞, 𝑞̈ 𝑟 ) = ⊖2 𝜀 (𝑞, 𝑞̈ 𝑟 )
𝑇

(60)
𝑇

2
= [𝜃12 𝜀 (𝑞, 𝑞̈ 𝑟 ) , … , 𝜃𝑚
𝜀 (𝑞, 𝑞̈ 𝑟 ) ]

𝑇

𝑇

𝑇

𝑇

3
𝐹 3 (𝑞, 𝑞̈ ) = ⊖3 𝜀 (𝑞, 𝑞̈ ) = [𝜃13 𝜀 (𝑞, 𝑞̇ ) , … , 𝜃𝑚
𝜀 (𝑞, 𝑞̈ ) ]

𝑇

(61)

The control security input is given by
𝜏 = 𝑀 𝑞̈ 𝑟 + 𝐵(𝑞)𝑞̇ 𝑞̇ + 𝐶(𝑞)𝑞̇ 2 + 𝑔(𝑞) + 𝐹1 (𝑞, 𝑞̇ ) + 𝐹 2 (𝑞, 𝑞̈ 𝑟 ) +
𝐹 3 (𝑞, 𝑞̈ ) − 𝐾𝑝 𝑒 − 𝐾𝑣 𝑒̇

(62)

Where 𝑀^ ,𝑩(𝒒)𝒒̇ 𝒒̇ , 𝑪(𝒒)𝒒̇ 𝟐 , 𝒈(𝒒) are the estimations of 𝑀(𝑞).
Based on variable structure formulation (28) and PD linear methodology (5);
𝑆𝑁𝑒𝑤 = (𝑒̇ + 𝜆𝑒)

(63)

And 𝑈𝑠𝑤𝑖𝑡𝑐ℎ is obtained by
Uswitch = K(x⃗, t) ∙ sgn(SNew ) = K(x⃗, t) ∙ sgn (𝐾(𝑒̇ + 𝜆𝑒))

Copyright ⓒ 2015 SERSC

(64)

63

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

The Lyapunov function in this design is defined as
𝑀

(65)

1
1
1 𝑇
𝑉 = 𝑆 𝑇 𝑀𝑆 + ∑
𝜙 . 𝜙𝑗
2
2
𝛾𝑠𝑗
𝐽=1

where 𝛾𝑠𝑗 is a positive coefficient, 𝝓 = 𝜽∗ − 𝜽, 𝜽∗ is minimum error and 𝜃 is adjustable
parameter. Since 𝑀̇ − 2𝑉 is skew-symetric matrix;
1
𝑆 𝑇 𝑀𝑆̇ + 𝑆 𝑇 𝑀̇𝑆 = 𝑆 𝑇 (𝑀𝑆̇ + 𝑉𝑆)
2

(66)

If the dynamic formulation of robot manipulator defined by
𝜏 = 𝑀(𝑞)𝑞̈ + 𝑉(𝑞, 𝑞̇ )𝑞̇ + 𝐺(𝑞)

(67)

the controller formulation is defined by
̂ 𝑞̈ 𝑟 + 𝑉̂ 𝑞̇ 𝑟 + 𝐺̂ − 𝜆𝑆 − 𝐾
𝜏=𝑀

(68)

According to (58) and (59)
̂ 𝑞̈ 𝑟 + 𝑉̂ 𝑞̇ 𝑟 + 𝐺̂ − 𝜆𝑆 − 𝐾
𝑀(𝑞)𝑞̈ + 𝑉(𝑞, 𝑞̇ )𝑞̇ + 𝐺(𝑞) = 𝑀

(69)

Since 𝒒̇ 𝒓 = 𝒒̇ − 𝑺 and 𝒒̈ 𝒓 = 𝒒̈ − 𝑺̇
𝑀𝑆̇ + (𝑉 + 𝜆)𝑆 = ∆𝑓 − 𝐾

(70)

𝑴𝑺̇ = 𝚫𝒇 − 𝑲 − 𝑽𝑺 − 𝝀𝑺
The derivation of V is defined
𝑀

(71)

1
1 𝑇
𝑉̇ = 𝑆 𝑇 𝑀𝑆̇ + 𝑆 𝑇 𝑀̇𝑆 + ∑
𝜙 . 𝜙̇𝑗
2
𝛾𝑠𝑗
𝐽=1
𝑴

𝑽̇ = 𝑺𝑻 (𝑴𝑺̇ + 𝑽𝑺) + ∑
𝑱=𝟏

𝟏 𝑻
𝝓 . 𝝓̇𝒋
𝜸𝒔𝒋

Based on (61) and (62)
1 T
̇
V̇ = S T (Δf − K − VS − λS + VS) + ∑M
J=1 γ ϕ . ϕj

(72)

sj

𝑇
where ∆𝑓 = [𝑀(𝑞)𝑞̈ + 𝑉(𝑞, 𝑞̇ )𝑞̇ + 𝐺(𝑞)] − ∑𝑀
𝑙=1 𝜃 𝜁(𝑥)
𝑴

𝑴

𝑽̇ = ∑[𝑺𝒋 (𝚫𝒇𝐣 − 𝑲𝒋 )] −𝑺𝑻 𝝀𝑺 + ∑
𝑱=𝟏

𝑱=𝟏

𝟏 𝑻
𝝓 . 𝝓̇𝒋
𝜸𝒔𝒋

suppose 𝐾𝑗 is defined as follows

64

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

𝐾𝑗 =

𝑙
∑𝑀
𝑙=1 𝜃𝑗 [𝜇𝐴 (𝑆𝑗 )]

∑𝑀
𝑙=1[𝜇𝐴 (𝑆𝑗 )]

(73)

= 𝜃𝑗𝑇 𝜁𝑗 (𝑆𝑗 )

Where 𝜁𝑗 (𝑆𝑗 ) = [𝜁𝑗1 (𝑆𝑗 ), 𝜁𝑗2 (𝑆𝑗 ), 𝜁𝑗3 (𝑆𝑗 ), … . . , 𝜁𝑗𝑀 (𝑆𝑗 )]𝑇
𝜁𝑗1 (𝑆𝑗 )

=

𝜇(𝐴) 𝑙𝑗 (𝑆𝑗 )

(74)

∑𝑖 𝜇(𝐴) 𝑙 (𝑆𝑗 )
𝑗

where 𝜇(𝑥𝑖) is membership function.
The fuzzy system is defined as
𝑓(𝑥) = 𝜏𝑓𝑢𝑧𝑧𝑦 = ∑

𝑀

(75)

𝜃 𝑇 𝜁(𝑥) = 𝜓(𝑒, 𝑒̇ )

𝑙=1

where 𝜃 = (𝜃 1 , 𝜃 2 , 𝜃 3 , … … . , 𝜃 𝑀 ) is adjustable parameter in (65)
according to (62), (63) and (65);
𝑀
𝑇
𝑇
𝑉̇ = ∑𝑀
𝐽=1[𝑆𝑗 (Δ𝑓j − 𝜃 𝜁(𝑆𝑗 )] −𝑆 𝜆𝑆 + ∑𝐽=1

1
𝜙 𝑇 . 𝜙̇𝑗
𝛾𝑠𝑗

(76)

Based on 𝝓 = 𝜽∗ − 𝜽 → 𝜽 = 𝜽∗ − 𝝓
T
∗T
M 1 T ̇
T
V̇ = ∑M
J=1[Sj (Δfj − θ ζ(Sj ) + ϕ ζ(Sj )] −S λS + ∑J=1 γ ϕ . ϕj

(77)

sj

𝑴

𝑴

𝑽̇ = ∑[𝑺𝒋 (𝚫𝒇𝐣 − (𝜽 ) 𝜻(𝑺𝒋 )] −𝑺 𝝀𝑺 + ∑
∗ 𝑻

𝑻

𝑱=𝟏

𝑱=𝟏

𝟏 𝑻
𝝓 [𝜸 . 𝑺 . 𝜻 (𝑺 ) + 𝝓̇𝒋 ])
𝜸𝒔𝒋 𝒋 𝒔𝒋 𝒋 𝒋 𝒋

where 𝜽̇𝒋 = 𝜸𝒔𝒋 𝑺𝒋 𝜻𝒋 (𝑺𝒋 ) is adaption law, ∅̇𝒋 = −𝜽̇𝒋 = −𝜸𝒔𝒋 𝑺𝒋 𝜻𝒋 (𝑺𝒋 )
𝑽̇ is considered by
𝑚

𝑉̇ = ∑[𝑆𝑗 ∆𝑓𝑗 − ((𝜃𝑗∗ )𝑇 𝜁𝑗 (𝑆𝑗 ))] − 𝑆 𝑇 𝜆𝑆

(78)

𝑗=1

The minimum error is defined by
𝑒𝑚𝑗 = ∆𝑓𝑗 − ((𝜃𝑗∗ )𝑇 𝜁𝑗 (𝑆𝑗 ))

(79)

Therefore 𝑽̇ is computed as
𝑚

𝑉̇ = ∑[𝑆𝑗 𝑒𝑚𝑗 ] − 𝑆 𝑇 𝜆𝑆

(80)

𝑗=1

𝑇
≤ ∑𝑚
𝑗=1 |𝑆𝑗 ||𝑒𝑚𝑗 | − 𝑆 𝜆𝑆
𝑚

= ∑ |𝑆𝑗 ||𝑒𝑚𝑗 | − 𝜆𝑗 𝑆𝑗 2
𝑗=1

Copyright ⓒ 2015 SERSC

65

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

𝑚

(81)

= ∑ |𝑆𝑗 |(|𝑒𝑚𝑗 | − 𝜆𝑗 𝑆𝑗 )
𝑗=1

For continuous function 𝑔(𝑥), and suppose 𝜀 > 0 it is defined the fuzzy logic system
in form of
𝑆𝑢𝑝𝑥∈𝑈 |𝑓(𝑥) − 𝑔(𝑥)| < 𝜖

(82)

the minimum approximation error (𝑒𝑚𝑗 ) is very small.
𝑖𝑓 𝜆𝑗 = 𝛼

𝑡ℎ𝑎𝑡

𝛼|𝑆𝑗 | > 𝑒𝑚𝑗 (𝑆𝑗 ≠ 0)

𝑡ℎ𝑒𝑛 𝑉̇ < 0 𝑓𝑜𝑟 (𝑆𝑗 ≠ 0)

(83)

This method has two main controller’s coefficients, 𝐾𝑝 𝑎𝑛𝑑 𝐾𝑉 . To tune and
optimize these parameters mathematical formulation is used
𝑈𝑚𝑜𝑑𝑒𝑙−𝑏𝑎𝑠𝑒 = 𝑈𝑓𝑢𝑧𝑧𝑦 + 𝑈𝑉𝑆𝐶

(84)

Umodel−base = Ufuzzy + UVSC = [𝑴−𝟏 (𝑩 + 𝑪 + 𝑮) + 𝑺̇]𝑴 + 𝑲 ∙ 𝐬𝐠𝐧(𝑺) +

(85)

2
xi −αli
l
n
∑M
θ
exp(−(
)]
[∏
)
l=1
i=1
δli
l 2
n exp(−(xi−αi )
∑M
[∏
) ]
l=1 i=1
δli

The most important different between VSC and FVSC is the uncertainty. In VSC the
uncertainty is d = G+F + f. The variable structure gain must be bigger than its upper
bound. It is not an easy job because this term includes tracking errors 𝑒1 and𝑞̇ 1 . While in
FVSC, the uncertainty η is the fuzzy approximation error for 𝐺 + 𝐹 + 𝑓.
𝑙 2

𝐺+𝐹+𝑓 =

(86)

𝑥𝑖 −𝛼𝑖
𝑛
𝑙
∑𝑀
) )]
𝑙=1 𝜃 [∏𝑖=1 𝑒𝑥𝑝(−(
𝛿𝑙
𝑖
𝑙 2
𝑥
−𝛼
𝑖
𝑛
𝑖
∑𝑀
𝑙=1[∏𝑖=1 𝑒𝑥𝑝(−( 𝛿𝑙 ) )]
𝑖

It is usually is smaller than 𝐺 + 𝐹 + 𝑓 ; and the upper bound of it is easy to be
estimated.

4. Results and Discussion
In this section, we use a benchmark model, OCTARM VI robot manipulator, to
evaluate our control algorithms [22]. We compare the following controllers: classical PD
controller, PD fuzzy controller and model base fuzzy variable structure controller which is
proposed in this paper. The simulation was implemented in MATLAB/SIMULINK
environment.
Close loop response of tracking result without any disturbance: Figure 4 illustrates the
tracking performance in three types of controller; linear PD controller, linear PD
controller based on fuzzy logic estimator and proposed controller.

66

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Figure 4. Linear PD, PDFLC and Proposed Method Trajectory Following
without Disturbance
Based on Figure 4; pure PD controller has oscillation in first and three links, because
continuum robot manipulator is a highly nonlinear controller and control of this system by
linear method is very difficult. Based on above graph, however PD-FUZZY controller is a
nonlinear methodology but it has difficulty to control this plant because it is a model base
controller.
Close loop response of trajectory following in presence of load disturbance: Figure 5
demonstrates the power disturbance elimination in three types of controller in presence of
disturbance for robot manipulator. The disturbance rejection is used to test the robustness
comparisons of these three methodologies.

Copyright ⓒ 2015 SERSC

67

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Figure 5. Linear PD, PD-FLC and Proposed Method Trajectory Following
with Disturbance
Based on Figure 5; by comparison with the PD, PD-FLC and proposed model base
FVSC is more stable and robust and this method is a chattering free design.

5. Conclusion
This research focuses on basic concepts of continuum robot manipulator (e.g.,
OCTARM VI robot manipulator) and model base robust soft computing control
methodology. The dynamic parameters of this system are highly nonlinear. To control of
this system nonlinear control methodology variable structure controller (VSC) is
introduced. VSC is a significant nonlinear controller under condition of partly uncertain
dynamic parameters of system. This controller is used to control of highly nonlinear
systems especially for robot manipulators, because this controller is a robust and stable.
Conversely, pure VSC is used in many applications; it has two important drawbacks
namely; chattering phenomenon, and nonlinear equivalent dynamic formulation in
uncertain dynamic parameter. In this research the chattering phenomenon and equivalent
part problems can resolve by using artificial intelligence methodology. Fuzzy logic theory
is used to estimate the system dynamic. To estimate the system dynamics and eliminate
the chattering, fuzzy variable structure controller is commencing. This methodology is
based on applied fuzzy logic in equivalent nonlinear dynamic part to estimate unknown
parameters. This controller has acceptable performance in presence of uncertainty (e.g.,
overshoot=1%, rise time=0.9 second, steady state error = 1.6e-8 and RMS error=4.8e-8).

Acknowledgements
The authors would like to thank the anonymous reviewers for their careful reading of
this paper and for their helpful comments. This work was supported by the Iranian

68

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Institute of Advance Science and Technology Program of Iran under grant no. 2013Persian Gulf-2A.
Iranian center of Advance Science and Technology (IRAN SSP) is one of the
independent research centers specializing in research and training across of Control and
Automation, Electrical and Electronic Engineering, and Mechatronics & Robotics in Iran.
At IRAN SSP research center, we are united and energized by one mission to discover
and develop innovative engineering methodology that solve the most important
challenges in field of advance science and technology. The IRAN SSP Center is instead to
fill a long standing void in applied engineering by linking the training a development
function one side and policy research on the other. This center divided into two main
units:

Education unit

Research and Development unit

References
[1] G. Robinson and J. Davies, “Continuum robots – a state of the art,”Proc. IEEE International Conference
on Robotics and Automation, Detroit, MI, vol. 4, (1999), pp. 2849-2854.
[2] I. D. Walker, D. Dawson, T. Flash, F. Grasso, R. Hanlon, B. Hochner, W. M. Kier, C. Pagano,C. D.
Rahn and Q. Zhang, “Continuum Robot Arms Inspired by Cephalopods, Proceedings SPIE Conference
on Unmanned Ground Vehicle Technology VII, Orlando, FL, (2005), pp. 303-314.
[3] K. Suzumori, S. Iikura, and H. Tanaka, “Development of Flexible Microactuator and it’s Applications to
Robotic Mechanisms”, Proceedings IEEE International Conference on Robotics and Automation,
Sacramento, California, (1991), pp. 1622-1627.
[4] D. Trivedi, C. D. Rahn, W. M. Kier, and I. D. Walker, “Soft Robotics: Biological Inspiration, State of the
Art, and Future Research”, Applied Bionics and Biomechanics, vol. 5, no. 2, (2008), pp. 99-117.
[5] W. McMahan, M. Pritts, V. Chitrakaran, D. Dienno, M. Grissom, B. Jones, M. Csencsits, C. D. Rahn, D.
Dawson, and I. D. Walker, “Field Trials and Testing of “OCTARM” Continuum Robots”, Proc. IEEE
International Conference on Robotics and Automation, (2006), pp. 2336-2341.
[6] W. McMahan and I. D. Walker, “Octopus-Inspired Grasp Synergies for Continuum Manipulators”, Proc.
IEEE International Conference on Robotics and Biomimetics, (2009), pp. 945- 950.
[7] I. Boiko, L. Fridman, A. Pisano and E. Usai, "Analysis of chattering in systems with second-order sliding
modes," IEEE Transactions on Automatic Control, vol. 52, no. 11, (2007), pp. 2085-2102.
[8] J. Wang, A. Rad and P. Chan, "Indirect adaptive fuzzy sliding mode control: Part I: fuzzy switching,"
Fuzzy Sets and Systems, vol. 122, no. 1, (2001), pp. 21-30.
[9] J. J. E. Slotine, "Sliding controller design for non-linear systems," International Journal of Control, vol.
40, no. 2, (1984), pp. 421-434.
[10] R. Palm, "Sliding mode fuzzy control," IEEE conference proceeding,(2002), pp. 519-526.
[11] H. Elmali and N. Olgac, "Implementation of sliding mode control with perturbation estimation
(SMCPE)," Control Systems Technology, IEEE Transactions on, vol. 4, no. 1, (2002), pp. 79-85.
[12] J. Moura and N. Olgac, "A comparative study on simulations vs. experiments of SMCPE," IEEE
conference proceeding, (2002), pp. 996-1000.
[13] Y. Li and Q. Xu, "Adaptive Sliding Mode Control With Perturbation Estimation and PID Sliding Surface
for Motion Tracking of a Piezo-Driven Micromanipulator," Control Systems Technology, IEEE
Transactions on, vol. 18, no. 4, (2010), pp. 798-810.
[14] F. Piltan, M. Akbari, M. Piran and M. Bazregar. ”Design Model Free Switching Gain Scheduling
Baseline Controller with Application to Automotive Engine”, International Journal of Information
Technology and Computer Science, vol. 1, (2013), pp. 65-73.
[15] F. Piltan, N. Sulaiman, Z. Tajpaykar, P. Ferdosali and M. Rashidi, “Design Artificial Nonlinear Robust
Controller Based on CTLC and FSMC with Tunable Gain,” International Journal of Robotic and
Automation, vol. 2, no. 3, (2011), pp. 205-220.

Authors
Omid Mahmoudi, he is an electrical and control researcher of
research and development company SSP. Co. He is now pursuing his
Master in control engineering at Shiraz University. His main areas
are nonlinear control, artificial control system and robotics.

Copyright ⓒ 2015 SERSC

69

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Farzin Piltan was born on 1975, Shiraz, Iran. In 2004 he is
jointed Institute of Advance Science and Technology, Research and
Development Center, IRAN SSP. Now he is a dean of Intelligent
Control and Robotics Lab. He is led of team (47 researchers) to
design and build of nonlinear control of industrial robot manipulator
for experimental research and education and published about 54
Papers in this field since 2010 to 2012, team supervisor and leader (9
researchers) to design and implement intelligent tuning the rate of
fuel ratio in internal combustion engine for experimental research and
education and published about 17 Journal papers since 2011 to 2013,
team leader and advisor (34 researchers) of filtering the hand tremors
in flexible surgical robot for experimental research and education and
published about 31 journal papers in this field since 2012 to date, led
of team (21 researchers) to design high precision and fast dynamic
controller for multi-degrees of freedom actuator for experimental
research and education and published about 7 journal papers in this
field since 2013 to date, led of team (22 researchers) to research of
full digital control for nonlinear systems (e.g., Industrial Robot
Manipulator, IC Engine, Continuum Robot, and Spherical Motor) for
experimental research and education and published about 4 journal
papers in this field since 2010 to date and finally led of team (more
than 130 researchers) to implementation of Project Based-Learning
project at IRAN SSP research center for experimental research and
education, and published more than 110 journal papers since 2010 to
date. In addition to 7 textbooks, Farzin Piltan is the main author of
more than 115 scientific papers in refereed journals. He is editorial
review board member for ‘international journal of control and
automation (IJCA), Australia, ISSN: 2005-4297; ‘International
Journal of Intelligent System and Applications (IJISA)’, Hong Kong,
ISSN:2074-9058; ‘IAES international journal of robotics and
automation, Malaysia, ISSN:2089-4856; ‘International Journal of
Reconfigurable and Embedded Systems’, Malaysia, ISSN:2089-4864.
His current research
interests are
nonlinear control, artificial
control system and applied to FPGA, robotics and artificial nonlinear
control and IC engine modeling and control.
Omid Reza Sadrnia, he is a communication and electrical
engineer researcher of research and development company SSP. Co.
He is now pursuing his Master in communication engineering at
Shiraz University. His research activities deal with the robotics and
artificial nonlinear control.

Mahdi Jafari, he is a communication and electrical engineer
researcher of research and development company SSP. Co. He is now
pursuing his Master in communication engineering at Shiraz
University. His research activities deal with the robotics and artificial
nonlinear control.

70

Copyright ⓒ 2015 SERSC

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

Mehdi Eram, he is an electrical engineer researcher of research
and development company SSP. Co. His research activities deal with
the robotics and artificial nonlinear control and robust control.

Copyright ⓒ 2015 SERSC

71

International Journal of Hybrid Information Technology
Vol.8, No.1 (2015)

72

Copyright ⓒ 2015 SERSC

